# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import humanaction_pb2 as humanaction__pb2


class HumanActionStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Classify = channel.stream_stream(
        '/humanaction.HumanAction/Classify',
        request_serializer=humanaction__pb2.Chunk.SerializeToString,
        response_deserializer=humanaction__pb2.label.FromString,
        )


class HumanActionServicer(object):
  """The greeting service definition.
  """

  def Classify(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_HumanActionServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Classify': grpc.stream_stream_rpc_method_handler(
          servicer.Classify,
          request_deserializer=humanaction__pb2.Chunk.FromString,
          response_serializer=humanaction__pb2.label.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'humanaction.HumanAction', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
